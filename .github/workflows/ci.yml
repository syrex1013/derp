name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test on Node ${{ matrix.node-version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 21.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Build
        run: npm run build

      - name: Run tests
        run: npm test
      
      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.x'
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/coverage-final.json
          flags: unittests
          name: codecov-umbrella

  build:
    name: Build package
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build
      
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  publish:
    name: Publish to npm and Homebrew
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build
      
      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Build binaries
        run: npm run build:binaries
      
      - name: Calculate SHA256 checksums
        id: checksums
        run: |
          echo "macos_sha256=$(shasum -a 256 dist/bin/derp-macos | cut -d ' ' -f 1)" >> $GITHUB_OUTPUT
          echo "linux_sha256=$(shasum -a 256 dist/bin/derp-linux | cut -d ' ' -f 1)" >> $GITHUB_OUTPUT
      
      - name: Get version from package.json
        id: package_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      
      - name: Create and push tag
        run: |
          VERSION="${{ steps.package_version.outputs.version }}"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          if git rev-parse "v$VERSION" >/dev/null 2>&1; then
            echo "Tag v$VERSION already exists, skipping"
            echo "skip_release=true" >> $GITHUB_ENV
          else
            git tag "v$VERSION"
            git push origin "v$VERSION"
            echo "skip_release=false" >> $GITHUB_ENV
          fi
      
      - name: Rename binaries for release
        if: env.skip_release == 'false'
        run: |
          mv dist/bin/derp-macos derp-macos
          mv dist/bin/derp-linux derp-linux
      
      - name: Create GitHub Release
        if: env.skip_release == 'false'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.package_version.outputs.version }}
          files: |
            derp-macos
            derp-linux
          draft: false
          prerelease: false
          generate_release_notes: true
          body: |
            ## Installation

            ### Homebrew
            ```bash
            brew tap syrex1013/derp
            brew install derp
            ```

            ### npm
            ```bash
            npm install -g derp
            ```

            ### Manual Download
            Download the appropriate binary for your system and place it in your PATH.

            ## Checksums (SHA256)
            - macOS: `${{ steps.checksums.outputs.macos_sha256 }}`
            - Linux: `${{ steps.checksums.outputs.linux_sha256 }}`
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Update Homebrew formula
        if: env.skip_release == 'false'
        run: |
          VERSION="${{ steps.package_version.outputs.version }}"
          MACOS_SHA256="${{ steps.checksums.outputs.macos_sha256 }}"
          LINUX_SHA256="${{ steps.checksums.outputs.linux_sha256 }}"
          
          sed -i "s/version \".*\"/version \"$VERSION\"/" derp.rb
          sed -i "s/sha256 \".*\" # macos/sha256 \"$MACOS_SHA256\" # macos/" derp.rb
          sed -i "s/sha256 \".*\" # linux/sha256 \"$LINUX_SHA256\" # linux/" derp.rb
          
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add derp.rb
          
          if git diff --staged --quiet; then
            echo "No changes to Homebrew formula"
          else
            git commit -m "Update Homebrew formula to v$VERSION [skip ci]"
            git push origin HEAD:main
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

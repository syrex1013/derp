name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run linter
        run: npm run lint
      
      - name: Run tests
        run: npm test
      
      - name: Build
        run: npm run build

  publish-npm:
    name: Publish to npm
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  build-binaries:
    name: Build and Release Binaries
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build binaries
        run: npm run build:binaries

      - name: Calculate SHA256 checksums
        id: checksums
        run: |
          echo "macos_sha256=$(shasum -a 256 dist/bin/derp-macos | cut -d ' ' -f 1)" >> $GITHUB_OUTPUT
          echo "linux_sha256=$(shasum -a 256 dist/bin/derp-linux | cut -d ' ' -f 1)" >> $GITHUB_OUTPUT

      - name: Rename binaries for release
        run: |
          mv dist/bin/derp-macos derp-macos
          mv dist/bin/derp-linux derp-linux

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            derp-macos
            derp-linux
          draft: false
          prerelease: false
          generate_release_notes: true
          body: |
            ## Installation

            ### Homebrew
            ```bash
            brew tap syrex1013/derp
            brew install derp
            ```

            ### npm
            ```bash
            npm install -g derp
            ```

            ### Manual Download
            Download the appropriate binary for your system and place it in your PATH.

            ## Checksums (SHA256)
            - macOS: `${{ steps.checksums.outputs.macos_sha256 }}`
            - Linux: `${{ steps.checksums.outputs.linux_sha256 }}`
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Homebrew formula
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          MACOS_SHA256="${{ steps.checksums.outputs.macos_sha256 }}"
          LINUX_SHA256="${{ steps.checksums.outputs.linux_sha256 }}"

          # Update derp.rb with new version and checksums
          sed -i "s/version \".*\"/version \"$VERSION\"/" derp.rb
          sed -i "s/sha256 \".*\" # macos/sha256 \"$MACOS_SHA256\"/" derp.rb
          sed -i "s/sha256 \".*\" # linux/sha256 \"$LINUX_SHA256\"/" derp.rb

          # Commit and push if there are changes
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add derp.rb
          if git diff --staged --quiet; then
            echo "No changes to Homebrew formula"
          else
            git commit -m "Update Homebrew formula to v$VERSION"
            git push origin HEAD:main
          fi

